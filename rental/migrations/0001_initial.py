# Generated by Django 4.0.4 on 2022-05-04 20:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='rsj_company',
            fields=[
                ('company_reg_no', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('discount_rate', models.IntegerField(verbose_name=range(0, 99))),
            ],
            options={
                'db_table': 'rsj_company',
            },
        ),
        migrations.CreateModel(
            name='rsj_customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('street', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('pincode', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(regex='^[0-9]{5}$')])),
                ('phone_no', models.IntegerField(validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')])),
                ('email', models.EmailField(max_length=150)),
                ('driver_license', models.CharField(max_length=19, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z0-9]{19}$')])),
            ],
            options={
                'db_table': 'rsj_customer',
            },
        ),
        migrations.CreateModel(
            name='rsj_discount',
            fields=[
                ('coupon_code', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z0-9]{10}$')])),
                ('rate', models.IntegerField(verbose_name=range(0, 99))),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('used', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'rsj_discount',
            },
        ),
        migrations.CreateModel(
            name='rsj_invoice',
            fields=[
                ('invoice_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('invoice_date', models.DateTimeField()),
                ('pending_amount', models.DecimalField(decimal_places=2, default=models.DecimalField(decimal_places=2, max_digits=7), max_digits=7)),
            ],
            options={
                'db_table': 'rsj_invoice',
            },
        ),
        migrations.CreateModel(
            name='rsj_location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('street', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('pincode', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(regex='^[0-9]{5}$')])),
                ('phone_no', models.BigIntegerField(validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')])),
            ],
            options={
                'db_table': 'rsj_location',
            },
        ),
        migrations.CreateModel(
            name='rsj_plan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('cost', models.IntegerField()),
                ('description', models.TextField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'rsj_plan',
            },
        ),
        migrations.CreateModel(
            name='rsj_vehicle_class',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('name', models.CharField(max_length=30, unique=True)),
                ('rate_per_day', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MaxValueValidator(999.0), django.core.validators.MinValueValidator(1.0)])),
                ('over_mileage_fee', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MaxValueValidator(999.0), django.core.validators.MinValueValidator(1.0)])),
                ('daily_limit', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MaxValueValidator(99999.0), django.core.validators.MinValueValidator(1.0)])),
            ],
            options={
                'db_table': 'rsj_vehicle_class',
            },
        ),
        migrations.CreateModel(
            name='rsj_ind_cust',
            fields=[
                ('rsj_customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rental.rsj_customer')),
                ('policy_no', models.CharField(max_length=13, null=True)),
                ('insurance_name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'rsj_ind_cust',
            },
            bases=('rental.rsj_customer',),
        ),
        migrations.CreateModel(
            name='rsj_vehicle',
            fields=[
                ('vin', models.CharField(max_length=17, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z0-9]{17}$')])),
                ('make', models.CharField(max_length=30)),
                ('model', models.CharField(max_length=30)),
                ('year', models.IntegerField(validators=[django.core.validators.RegexValidator(regex='^[1-9][0-9]{3}$')])),
                ('availability', models.BooleanField(default=True)),
                ('lpn', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z0-9]{7}$')])),
                ('class_id', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='rental.rsj_vehicle_class')),
                ('location_id', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, to='rental.rsj_location')),
            ],
            options={
                'db_table': 'rsj_vehicle',
            },
        ),
        migrations.CreateModel(
            name='rsj_service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(9999999), django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('start_meter', models.DecimalField(decimal_places=2, max_digits=7)),
                ('end_meter', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('coupon_code', models.ForeignKey(db_column='coupon_code', on_delete=django.db.models.deletion.RESTRICT, to='rental.rsj_discount')),
                ('customer_id', models.ForeignKey(db_column='customer_id', on_delete=django.db.models.deletion.RESTRICT, to='rental.rsj_customer')),
                ('end_location', models.ForeignKey(db_column='end_location', on_delete=django.db.models.deletion.RESTRICT, related_name='end', to='rental.rsj_location')),
                ('plan_id', models.ForeignKey(db_column='plan_id', on_delete=django.db.models.deletion.RESTRICT, to='rental.rsj_plan')),
                ('start_location', models.ForeignKey(db_column='start_location', on_delete=django.db.models.deletion.RESTRICT, related_name='start', to='rental.rsj_location')),
                ('vin', models.ForeignKey(db_column='vin', on_delete=django.db.models.deletion.RESTRICT, to='rental.rsj_vehicle')),
            ],
            options={
                'db_table': 'rsj_service',
            },
        ),
        migrations.CreateModel(
            name='rsj_payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('method', models.CharField(choices=[('CARD', 'CARD'), ('CASH', 'CASH')], default='CARD', max_length=4)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('p_date', models.DateTimeField()),
                ('card_no', models.BigIntegerField(null=True)),
                ('name_on_card', models.CharField(max_length=50, null=True)),
                ('exp_date', models.DateField(null=True)),
                ('invoice_id', models.ForeignKey(db_column='invoice_id', on_delete=django.db.models.deletion.RESTRICT, to='rental.rsj_invoice')),
            ],
            options={
                'db_table': 'rsj_payment',
            },
        ),
        migrations.AddField(
            model_name='rsj_invoice',
            name='service_id',
            field=models.ForeignKey(db_column='service_id', on_delete=django.db.models.deletion.RESTRICT, to='rental.rsj_service'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='rsj_corp_cust',
            fields=[
                ('rsj_customer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rental.rsj_customer')),
                ('emp_id', models.CharField(max_length=10, null=True)),
                ('company_reg_no', models.ForeignKey(db_column='company_reg_no', null=True, on_delete=django.db.models.deletion.RESTRICT, to='rental.rsj_company')),
            ],
            options={
                'db_table': 'rsj_corp_cust',
            },
            bases=('rental.rsj_customer',),
        ),
    ]
