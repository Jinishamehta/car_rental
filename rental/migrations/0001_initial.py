# Generated by Django 4.0.4 on 2022-05-09 00:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RsjCustomer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=1)),
                ('fname', models.CharField(max_length=30)),
                ('lname', models.CharField(max_length=30)),
                ('street', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('zipcode', models.CharField(max_length=5)),
                ('state', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=50)),
                ('phone_no', models.BigIntegerField()),
                ('dr_lno', models.CharField(max_length=19)),
            ],
            options={
                'db_table': 'rsj_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RsjInvoice',
            fields=[
                ('invoice_id', models.IntegerField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('pendng_amt', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
            ],
            options={
                'db_table': 'rsj_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RsjPayment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('method', models.CharField(max_length=4)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('date', models.DateTimeField(db_column='DATE')),
                ('card_no', models.BigIntegerField()),
                ('name_on_card', models.CharField(max_length=30)),
                ('exp_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'rsj_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RsjService',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('odometer_start', models.IntegerField()),
                ('odometer_end', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rsj_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rsj_company',
            fields=[
                ('company_reg_no', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('discount_rate', models.IntegerField(verbose_name=range(0, 99))),
            ],
            options={
                'db_table': 'rsj_company',
            },
        ),
        migrations.CreateModel(
            name='rsj_discount',
            fields=[
                ('coupon_code', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z0-9]{10}$')])),
                ('rate', models.IntegerField(verbose_name=range(0, 99))),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('used', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'rsj_discount',
            },
        ),
        migrations.CreateModel(
            name='rsj_location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('street', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('pincode', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(regex='^[0-9]{5}$')])),
                ('phone_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')])),
            ],
            options={
                'db_table': 'rsj_location',
            },
        ),
        migrations.CreateModel(
            name='rsj_plan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('cost', models.IntegerField()),
                ('description', models.TextField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'rsj_plan',
            },
        ),
        migrations.CreateModel(
            name='rsj_vehicle_class',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('name', models.CharField(max_length=30, unique=True)),
                ('rate_per_day', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MaxValueValidator(999.0), django.core.validators.MinValueValidator(1.0)])),
                ('over_mileage_fee', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MaxValueValidator(999.0), django.core.validators.MinValueValidator(1.0)])),
                ('daily_limit', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MaxValueValidator(99999.0), django.core.validators.MinValueValidator(1.0)])),
            ],
            options={
                'db_table': 'rsj_vehicle_class',
            },
        ),
        migrations.CreateModel(
            name='RsjCorpCst',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='rental.rsjcustomer')),
                ('emp_id', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'rsj_corp_cst',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RsjIndCst',
            fields=[
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='rental.rsjcustomer')),
                ('policy_no', models.CharField(max_length=13)),
                ('insurance_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'rsj_ind_cst',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rsj_vehicle',
            fields=[
                ('vin', models.CharField(max_length=17, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z0-9]{17}$')])),
                ('make', models.CharField(max_length=30)),
                ('model', models.CharField(max_length=30)),
                ('year', models.IntegerField(validators=[django.core.validators.RegexValidator(regex='^[1-9][0-9]{3}$')])),
                ('availability', models.BooleanField(default=True)),
                ('lpn', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z0-9]{7}$')])),
                ('class_id', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='rental.rsj_vehicle_class')),
                ('location_id', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, to='rental.rsj_location')),
            ],
            options={
                'db_table': 'rsj_vehicle',
            },
        ),
    ]
